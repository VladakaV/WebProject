{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, vModelCheckbox as _vModelCheckbox, createTextVNode as _createTextVNode, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"a\", {\n  href: \"/privacy-policy\"\n}, \"обработку моих персональных данных\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"input\", {\n  class: \"btn\",\n  type: \"submit\",\n  value: \"Отправить\"\n}, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"form\", {\n    onSubmit: _cache[5] || (_cache[5] = _withModifiers((...args) => $options.formSubmit && $options.formSubmit(...args), [\"prevent\"])),\n    class: \"popupForm d-flex flex-column align-items-stretch\",\n    \"accept-charset\": \"UTF-8\"\n  }, [_createElementVNode(\"label\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form_elem form_name form-control\",\n    placeholder: \"Ваше имя\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.form.name = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.form.name]])]), _createElementVNode(\"label\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form_elem form_number form-control\",\n    placeholder: \"Ваш номер\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.form.number = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.form.number]])]), _createElementVNode(\"label\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    class: \"form_elem form_email form-control\",\n    placeholder: \"Ваш email\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.form.email = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.form.email]])]), _createElementVNode(\"label\", null, [_withDirectives(_createElementVNode(\"textarea\", {\n    class: \"form_elem form_message form-control\",\n    placeholder: \"Ваш коментарий\",\n    rows: \"3\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.form.message = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.form.message]])]), _createElementVNode(\"label\", null, [_withDirectives(_createElementVNode(\"input\", {\n    class: \"form_check\",\n    id: \"formCheck\",\n    name: \"field_check\",\n    type: \"checkbox\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.checked = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelCheckbox, $data.checked]]), _createTextVNode(\" Отправляя заявку, я соглашаюсь на \"), _hoisted_1]), _hoisted_2], 32 /* HYDRATE_EVENTS */)]);\n}","map":{"version":3,"mappings":";gCAsB8BA,oBAAgE;EAA7DC,IAAI,EAAC;AAAiB,GAAC,oCAAkC;gCAE9ED,oBAAmD;EAA5CE,KAAK,EAAC,KAAK;EAACC,IAAI,EAAC,QAAQ;EAACC,KAAK,EAAC;;;;uBAvB/CC,oBA0BM,cAzBFL,oBAwBO;IAxBAM,QAAM,wDAAUC,mDAAU;IAAEL,KAAK,EAAC,kDAAkD;IACvF,gBAAc,EAAC;MACfF,oBAEQ,gCADJA,oBAAuG;IAAhGG,IAAI,EAAC,MAAM;IAACD,KAAK,EAAC,kCAAkC;IAACM,WAAW,EAAC,UAAU;+DAAUC,UAAI,CAACC,IAAI;iDAATD,UAAI,CAACC,IAAI,OAEzGV,oBAGQ,gCAFJA,oBAC0B;IADnBG,IAAI,EAAC,MAAM;IAACD,KAAK,EAAC,oCAAoC;IAACM,WAAW,EAAC,WAAW;+DACxEC,UAAI,CAACE,MAAM;iDAAXF,UAAI,CAACE,MAAM,OAE5BX,oBAGQ,gCAFJA,oBACyB;IADlBG,IAAI,EAAC,OAAO;IAACD,KAAK,EAAC,mCAAmC;IAACM,WAAW,EAAC,WAAW;+DACxEC,UAAI,CAACG,KAAK;iDAAVH,UAAI,CAACG,KAAK,OAE3BZ,oBAGQ,gCAFJA,oBACsC;IAD5BE,KAAK,EAAC,qCAAqC;IAACM,WAAW,EAAC,gBAAgB;IAACK,IAAI,EAAC,GAAG;+DAC9EJ,UAAI,CAACK,OAAO;iDAAZL,UAAI,CAACK,OAAO,OAE7Bd,oBAIQ,gCAHJA,oBAA8F;IAAvFE,KAAK,EAAC,YAAY;IAACa,EAAE,EAAC,WAAW;IAACL,IAAI,EAAC,aAAa;IAACP,IAAI,EAAC,UAAU;+DAAUM,aAAO;qDAAPA,aAAO,sBAAE,qCAEhF,aAAgE,IAElFO,UAAmD","names":["_createElementVNode","href","class","type","value","_createElementBlock","onSubmit","$options","placeholder","$data","name","number","email","rows","message","id","_hoisted_2"],"sourceRoot":"","sources":["C:\\Users\\Admin\\Desktop\\vue\\Components\\Form.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <form @submit.prevent=\"formSubmit\" class=\"popupForm d-flex flex-column align-items-stretch\"\r\n            accept-charset=\"UTF-8\">\r\n            <label>\r\n                <input type=\"text\" class=\"form_elem form_name form-control\" placeholder=\"Ваше имя\" v-model=\"form.name\">\r\n            </label>\r\n            <label>\r\n                <input type=\"text\" class=\"form_elem form_number form-control\" placeholder=\"Ваш номер\"\r\n                    v-model=\"form.number\">\r\n            </label>\r\n            <label>\r\n                <input type=\"email\" class=\"form_elem form_email form-control\" placeholder=\"Ваш email\"\r\n                    v-model=\"form.email\">\r\n            </label>\r\n            <label>\r\n                <textarea class=\"form_elem form_message form-control\" placeholder=\"Ваш коментарий\" rows=\"3\"\r\n                    v-model=\"form.message\"></textarea>\r\n            </label>\r\n            <label>\r\n                <input class=\"form_check\" id=\"formCheck\" name=\"field_check\" type=\"checkbox\" v-model=\"checked\">\r\n                Отправляя заявку, я\r\n                соглашаюсь на <a href=\"/privacy-policy\">обработку моих персональных данных</a>\r\n            </label>\r\n            <input class=\"btn\" type=\"submit\" value=\"Отправить\">\r\n\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            form: {\r\n                name: '',\r\n                number: '',\r\n                email: '',\r\n                message: ''\r\n            },\r\n            checked\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        changeUserState() {\r\n            if (this.auth) {\r\n                localStorage.removeItem('auth')\r\n            } else {\r\n                localStorage.setItem('auth', true)\r\n            }\r\n        },\r\n\r\n        formSubmit() {\r\n            if (this.checked == true) {\r\n                fetch('https://formcarry.com/s/gf9XxUK37', {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json', 'Accept': 'application/json' },\r\n                    body: JSON.stringify({\r\n                        Name: this.form.name,\r\n                        Number: this.form.number,\r\n                        Email: this.form.email,\r\n                        Message: this.form.message\r\n                    })\r\n                })\r\n                    .then(response => console.log(response))\r\n                    .then((data) => {\r\n                        alert(\"Success!\");\r\n                        localStorage.removeItem('formName');\r\n                        localStorage.removeItem('formNumber');\r\n                        localStorage.removeItem('formEmail');\r\n                        localStorage.removeItem('formMessage');\r\n                        name.value = localStorage.getItem('formName');\r\n                        number.value = localStorage.getItem('formNumber');\r\n                        email.value = localStorage.getItem('formEmail');\r\n                        message.value = localStorage.getItem('formMessage');\r\n                        check.checked = false;\r\n                    })\r\n                    .catch((error) => { alert(error.value); });\r\n                event.preventDefault();\r\n            }\r\n            else {\r\n                alert(\"Дайте свое согласие на отправку\");\r\n                event.preventDefault();\r\n            }\r\n\r\n        },\r\n\r\n\r\n        signIn() {\r\n            this.$load(async () => {\r\n                const data = (await this.$api.auth.signIn({\r\n                    email: this.form.email,\r\n                    password: this.form.password\r\n                })).data\r\n                localStorage.setItem('user', JSON.stringify(data))\r\n                this.$store.dispatch('user/setUser', data)\r\n                this.$emit('close')\r\n            })\r\n        },\r\n    },\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}