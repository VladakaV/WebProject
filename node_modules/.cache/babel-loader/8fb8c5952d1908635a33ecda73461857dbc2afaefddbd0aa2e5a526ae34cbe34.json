{"ast":null,"code":"export default {\n  data() {\n    return {\n      form: {\n        name: '',\n        number: '',\n        email: '',\n        message: ''\n      },\n      checked\n    };\n  },\n  methods: {\n    changeUserState() {\n      if (this.auth) {\n        localStorage.removeItem('auth');\n      } else {\n        localStorage.setItem('auth', true);\n      }\n    },\n    formSubmit() {\n      if (this.checked == true) {\n        fetch('https://formcarry.com/s/gf9XxUK37', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          },\n          body: JSON.stringify({\n            Name: this.form.name,\n            Number: this.form.number,\n            Email: this.form.email,\n            Message: this.form.message\n          })\n        }).then(response => console.log(response)).then(data => {\n          alert(\"Success!\");\n          localStorage.removeItem('formName');\n          localStorage.removeItem('formNumber');\n          localStorage.removeItem('formEmail');\n          localStorage.removeItem('formMessage');\n          name.value = localStorage.getItem('formName');\n          number.value = localStorage.getItem('formNumber');\n          email.value = localStorage.getItem('formEmail');\n          message.value = localStorage.getItem('formMessage');\n          check.checked = false;\n        }).catch(error => {\n          alert(error.value);\n        });\n        event.preventDefault();\n      } else {\n        alert(\"Дайте свое согласие на отправку\");\n        event.preventDefault();\n      }\n    },\n    signIn() {\n      this.$load(async () => {\n        const data = (await this.$api.auth.signIn({\n          email: this.form.email,\n          password: this.form.password\n        })).data;\n        localStorage.setItem('user', JSON.stringify(data));\n        this.$store.dispatch('user/setUser', data);\n        this.$emit('close');\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AA+BA,eAAe;EACXA,IAAI,GAAG;IACH,OAAO;MACHC,IAAI,EAAE;QACFC,IAAI,EAAE,EAAE;QACRC,MAAM,EAAE,EAAE;QACVC,KAAK,EAAE,EAAE;QACTC,OAAO,EAAE;MACb,CAAC;MACDC;IACJ;EACJ,CAAC;EAEDC,OAAO,EAAE;IACLC,eAAe,GAAG;MACd,IAAI,IAAI,CAACC,IAAI,EAAE;QACXC,YAAY,CAACC,UAAU,CAAC,MAAM;MAClC,OAAO;QACHD,YAAY,CAACE,OAAO,CAAC,MAAM,EAAE,IAAI;MACrC;IACJ,CAAC;IAEDC,UAAU,GAAG;MACT,IAAI,IAAI,CAACP,OAAM,IAAK,IAAI,EAAE;QACtBQ,KAAK,CAAC,mCAAmC,EAAE;UACvCC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YAAE,cAAc,EAAE,kBAAkB;YAAE,QAAQ,EAAE;UAAmB,CAAC;UAC7EC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACjBC,IAAI,EAAE,IAAI,CAACnB,IAAI,CAACC,IAAI;YACpBmB,MAAM,EAAE,IAAI,CAACpB,IAAI,CAACE,MAAM;YACxBmB,KAAK,EAAE,IAAI,CAACrB,IAAI,CAACG,KAAK;YACtBmB,OAAO,EAAE,IAAI,CAACtB,IAAI,CAACI;UACvB,CAAC;QACL,CAAC,EACImB,IAAI,CAACC,QAAO,IAAKC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC,EACtCD,IAAI,CAAExB,IAAI,IAAK;UACZ4B,KAAK,CAAC,UAAU,CAAC;UACjBlB,YAAY,CAACC,UAAU,CAAC,UAAU,CAAC;UACnCD,YAAY,CAACC,UAAU,CAAC,YAAY,CAAC;UACrCD,YAAY,CAACC,UAAU,CAAC,WAAW,CAAC;UACpCD,YAAY,CAACC,UAAU,CAAC,aAAa,CAAC;UACtCT,IAAI,CAAC2B,KAAI,GAAInB,YAAY,CAACoB,OAAO,CAAC,UAAU,CAAC;UAC7C3B,MAAM,CAAC0B,KAAI,GAAInB,YAAY,CAACoB,OAAO,CAAC,YAAY,CAAC;UACjD1B,KAAK,CAACyB,KAAI,GAAInB,YAAY,CAACoB,OAAO,CAAC,WAAW,CAAC;UAC/CzB,OAAO,CAACwB,KAAI,GAAInB,YAAY,CAACoB,OAAO,CAAC,aAAa,CAAC;UACnDC,KAAK,CAACzB,OAAM,GAAI,KAAK;QACzB,CAAC,EACA0B,KAAK,CAAEC,KAAK,IAAK;UAAEL,KAAK,CAACK,KAAK,CAACJ,KAAK,CAAC;QAAE,CAAC,CAAC;QAC9CK,KAAK,CAACC,cAAc,EAAE;MAC1B,OACK;QACDP,KAAK,CAAC,iCAAiC,CAAC;QACxCM,KAAK,CAACC,cAAc,EAAE;MAC1B;IAEJ,CAAC;IAGDC,MAAM,GAAG;MACL,IAAI,CAACC,KAAK,CAAC,YAAY;QACnB,MAAMrC,IAAG,GAAI,CAAC,MAAM,IAAI,CAACsC,IAAI,CAAC7B,IAAI,CAAC2B,MAAM,CAAC;UACtChC,KAAK,EAAE,IAAI,CAACH,IAAI,CAACG,KAAK;UACtBmC,QAAQ,EAAE,IAAI,CAACtC,IAAI,CAACsC;QACxB,CAAC,CAAC,EAAEvC,IAAG;QACPU,YAAY,CAACE,OAAO,CAAC,MAAM,EAAEM,IAAI,CAACC,SAAS,CAACnB,IAAI,CAAC;QACjD,IAAI,CAACwC,MAAM,CAACC,QAAQ,CAAC,cAAc,EAAEzC,IAAI;QACzC,IAAI,CAAC0C,KAAK,CAAC,OAAO;MACtB,CAAC;IACL;EACJ;AACJ","names":["data","form","name","number","email","message","checked","methods","changeUserState","auth","localStorage","removeItem","setItem","formSubmit","fetch","method","headers","body","JSON","stringify","Name","Number","Email","Message","then","response","console","log","alert","value","getItem","check","catch","error","event","preventDefault","signIn","$load","$api","password","$store","dispatch","$emit"],"sourceRoot":"","sources":["C:\\Users\\Admin\\Desktop\\vue\\Components\\Form.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <form @submit.prevent=\"formSubmit\" class=\"popupForm d-flex flex-column align-items-stretch\"\r\n            accept-charset=\"UTF-8\">\r\n            <label>\r\n                <input type=\"text\" class=\"form_elem form_name form-control\" placeholder=\"Ваше имя\" v-model=\"form.name\">\r\n            </label>\r\n            <label>\r\n                <input type=\"text\" class=\"form_elem form_number form-control\" placeholder=\"Ваш номер\"\r\n                    v-model=\"form.number\">\r\n            </label>\r\n            <label>\r\n                <input type=\"email\" class=\"form_elem form_email form-control\" placeholder=\"Ваш email\"\r\n                    v-model=\"form.email\">\r\n            </label>\r\n            <label>\r\n                <textarea class=\"form_elem form_message form-control\" placeholder=\"Ваш коментарий\" rows=\"3\"\r\n                    v-model=\"form.message\"></textarea>\r\n            </label>\r\n            <label>\r\n                <input class=\"form_check\" id=\"formCheck\" name=\"field_check\" type=\"checkbox\" v-model=\"checked\">\r\n                Отправляя заявку, я\r\n                соглашаюсь на <a href=\"/privacy-policy\">обработку моих персональных данных</a>\r\n            </label>\r\n            <input class=\"btn\" type=\"submit\" value=\"Отправить\">\r\n\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            form: {\r\n                name: '',\r\n                number: '',\r\n                email: '',\r\n                message: ''\r\n            },\r\n            checked\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        changeUserState() {\r\n            if (this.auth) {\r\n                localStorage.removeItem('auth')\r\n            } else {\r\n                localStorage.setItem('auth', true)\r\n            }\r\n        },\r\n\r\n        formSubmit() {\r\n            if (this.checked == true) {\r\n                fetch('https://formcarry.com/s/gf9XxUK37', {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json', 'Accept': 'application/json' },\r\n                    body: JSON.stringify({\r\n                        Name: this.form.name,\r\n                        Number: this.form.number,\r\n                        Email: this.form.email,\r\n                        Message: this.form.message\r\n                    })\r\n                })\r\n                    .then(response => console.log(response))\r\n                    .then((data) => {\r\n                        alert(\"Success!\");\r\n                        localStorage.removeItem('formName');\r\n                        localStorage.removeItem('formNumber');\r\n                        localStorage.removeItem('formEmail');\r\n                        localStorage.removeItem('formMessage');\r\n                        name.value = localStorage.getItem('formName');\r\n                        number.value = localStorage.getItem('formNumber');\r\n                        email.value = localStorage.getItem('formEmail');\r\n                        message.value = localStorage.getItem('formMessage');\r\n                        check.checked = false;\r\n                    })\r\n                    .catch((error) => { alert(error.value); });\r\n                event.preventDefault();\r\n            }\r\n            else {\r\n                alert(\"Дайте свое согласие на отправку\");\r\n                event.preventDefault();\r\n            }\r\n\r\n        },\r\n\r\n\r\n        signIn() {\r\n            this.$load(async () => {\r\n                const data = (await this.$api.auth.signIn({\r\n                    email: this.form.email,\r\n                    password: this.form.password\r\n                })).data\r\n                localStorage.setItem('user', JSON.stringify(data))\r\n                this.$store.dispatch('user/setUser', data)\r\n                this.$emit('close')\r\n            })\r\n        },\r\n    },\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}